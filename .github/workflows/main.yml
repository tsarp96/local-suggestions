name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Setup Node.js for Backend
    - name: Setup Node.js for Backend
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    # Backend
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Run Backend Linting
      working-directory: ./backend
      run: |
        npm run lint || true  # Don't fail the build for linting errors initially

    # Setup Node.js for Frontend
    - name: Setup Node.js for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    # Frontend
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Frontend Linting
      working-directory: ./frontend
      run: |
        npm run lint || true  # Don't fail the build for linting errors initially

    # Build Docker images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Backend Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: local-suggestions-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Frontend Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: local-suggestions-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Test Docker Compose
    - name: Test Docker Compose Build
      run: docker-compose build

  # Deployment job (commented out for now)
  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #   - name: Deploy to Production
  #     run: echo "Add deployment steps here" 